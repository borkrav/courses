#lang scheme

; f(x)=2*x+1, g(x)=x/1000000
;
;2n + 1 <= cn/1000000
;2000000n + 1000000 <= cn 
;(2000000n + 1000000)/n <= c      [n > 0]
;2000000 + 1000000/n <= c
;1000000/n <= c - 2000000
;n/1000000 >= 1/(c - 2000000)
;n >= 1000000/(c - 2000000)

;since n > 0, take c = 2000001

;n >= 1000000/(2000001 - 2000000)
;n >= 1000000

;take n0 = 1000000

;n >= 1000000
;1/n >= 1/1000000                 [n > 0]
;1000000/n <= 1
;2000000+ 1000000/n <= 1 + 2000000
;(2n+1)(1000000/n) <= 2000001
;2n+1 <= 2000001n/1000000
;                                    [] 
;

;Thus the statement is true for c = 2000001, x0 = 1000000, and (findx 2000001 1000000) must produce 'impossible

(provide c x0 findx)

(define c 2000001)
(define x0 1000000)

(define (findx c x0)
  (cond [(> (+ 1 (* 2 x0)) (* c (/ x0 1000000))) x0]
        [else 'impossible]))



